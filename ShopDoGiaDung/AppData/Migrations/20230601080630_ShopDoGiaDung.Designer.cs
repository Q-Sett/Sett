// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopDoGiaDung.Models;

#nullable disable

namespace AppData.Migrations
{
    [DbContext(typeof(ShoppingDBContext))]
    [Migration("20230601080630_ShopDoGiaDung")]
    partial class ShopDoGiaDung
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DanhMucSanPhamVoucher", b =>
                {
                    b.Property<Guid>("danhMucSanPhamsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("vouchersID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("danhMucSanPhamsID", "vouchersID");

                    b.HasIndex("vouchersID");

                    b.ToTable("DanhMucSanPhamVoucher");
                });

            modelBuilder.Entity("SanPhamVoucher", b =>
                {
                    b.Property<Guid>("sanPhamsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("vouchersID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("sanPhamsID", "vouchersID");

                    b.HasIndex("vouchersID");

                    b.ToTable("SanPhamVoucher");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.ChucVu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("chucVus");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.DanhMucSanPham", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDVoucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ThuocTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("danhMucSanPhams");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.Giohang", b =>
                {
                    b.Property<Guid>("IDNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IDNguoiDung");

                    b.ToTable("giohangs");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.GioHangChiTIet", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDGioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<double>("ThanhTien")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("IDGioHang");

                    b.HasIndex("IDSanPham");

                    b.ToTable("gioHangChiTIets");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.HoaDon", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("IDNguoiDung");

                    b.ToTable("hoaDons");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<Guid>("IDHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDHoaDon");

                    b.HasIndex("IDSanPham");

                    b.ToTable("hoaDonChiTiets");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.KhuyenMai", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PhanTramDuocGiam")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("khuyenMais");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.NguoiDung", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("IDChucVu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime");

                    b.Property<string>("TaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDChucVu");

                    b.ToTable("nguoiDungs");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.PhanHoi", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoaiPhanHoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NoiDungPhanHoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDNguoiDung");

                    b.HasIndex("IDSanPham");

                    b.ToTable("phanHois");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.SanPham", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("GiaBan")
                        .HasColumnType("float");

                    b.Property<Guid>("IDDanhMucSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NSX")
                        .HasColumnType("datetime");

                    b.Property<string>("NhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDDanhMucSanPham");

                    b.ToTable("sanPhams");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.Voucher", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayApDung")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime");

                    b.Property<int>("SoTienGiam")
                        .HasColumnType("int");

                    b.Property<string>("TenVocher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("vouchers");
                });

            modelBuilder.Entity("DanhMucSanPhamVoucher", b =>
                {
                    b.HasOne("ShopDoGiaDung.Models.DanhMucSanPham", null)
                        .WithMany()
                        .HasForeignKey("danhMucSanPhamsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDoGiaDung.Models.Voucher", null)
                        .WithMany()
                        .HasForeignKey("vouchersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SanPhamVoucher", b =>
                {
                    b.HasOne("ShopDoGiaDung.Models.SanPham", null)
                        .WithMany()
                        .HasForeignKey("sanPhamsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDoGiaDung.Models.Voucher", null)
                        .WithMany()
                        .HasForeignKey("vouchersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.GioHangChiTIet", b =>
                {
                    b.HasOne("ShopDoGiaDung.Models.Giohang", "gioHangs")
                        .WithMany("gioHangChiTIets")
                        .HasForeignKey("IDGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDoGiaDung.Models.SanPham", "sanPhams")
                        .WithMany("gioHangChiTIets")
                        .HasForeignKey("IDSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gioHangs");

                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.HoaDon", b =>
                {
                    b.HasOne("ShopDoGiaDung.Models.KhuyenMai", "khuyenMais")
                        .WithMany("hoaDons")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDoGiaDung.Models.NguoiDung", "nguoiDungs")
                        .WithMany("hoaDons")
                        .HasForeignKey("IDNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("khuyenMais");

                    b.Navigation("nguoiDungs");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("ShopDoGiaDung.Models.HoaDon", "hoaDons")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IDHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDoGiaDung.Models.SanPham", "sanPhams")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IDSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hoaDons");

                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.NguoiDung", b =>
                {
                    b.HasOne("ShopDoGiaDung.Models.ChucVu", "chucVus")
                        .WithMany("nguoiDungs")
                        .HasForeignKey("IDChucVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("chucVus");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.PhanHoi", b =>
                {
                    b.HasOne("ShopDoGiaDung.Models.NguoiDung", "nguoiDungs")
                        .WithMany("phanHois")
                        .HasForeignKey("IDNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDoGiaDung.Models.SanPham", "sanPhams")
                        .WithMany("phanHois")
                        .HasForeignKey("IDSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("nguoiDungs");

                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.SanPham", b =>
                {
                    b.HasOne("ShopDoGiaDung.Models.DanhMucSanPham", "danhMucSanPhams")
                        .WithMany("sanPhams")
                        .HasForeignKey("IDDanhMucSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("danhMucSanPhams");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.ChucVu", b =>
                {
                    b.Navigation("nguoiDungs");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.DanhMucSanPham", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.Giohang", b =>
                {
                    b.Navigation("gioHangChiTIets");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.HoaDon", b =>
                {
                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.KhuyenMai", b =>
                {
                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.NguoiDung", b =>
                {
                    b.Navigation("hoaDons");

                    b.Navigation("phanHois");
                });

            modelBuilder.Entity("ShopDoGiaDung.Models.SanPham", b =>
                {
                    b.Navigation("gioHangChiTIets");

                    b.Navigation("hoaDonChiTiets");

                    b.Navigation("phanHois");
                });
#pragma warning restore 612, 618
        }
    }
}
